{"version":3,"sources":["actions/index.js","actions/types.js","components/Header.js","components/Landing.js","components/Dashboard.js","components/surveys/SurveyFormReview.js","components/surveys/SurveyField.js","utils/validateEmails.js","components/surveys/SurveyForm.js","components/surveys/SurveyNew.js","components/App.js","reducers/index.js","reducers/authReducer.js","index.js"],"names":["fetchUser","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","res","wrap","_context","prev","next","axios","get","sent","type","payload","data","stop","_x","apply","this","arguments","submitSurvey","values","history","_ref2","_callee2","_context2","post","push","_x2","Header","props","auth","react_default","createElement","href","className","react_router_dom","to","id","renderContent","React","Component","connect","state","Landing","Dashboard","formValues","form","surveyForm","actions","withRouter","title","subject","body","recipients","onClick","onCancel","SurveyField","console","log","meta","label","assign","input","style","marginBottom","touched","error","undefined","regEmail","SurveyForm","onSubmit","handleSubmit","onSurveySubmit","Field","name","component","reduxForm","validate","errors","emails","invalidEmails","split","map","email","trim","filter","test","length","concat","validateEmails","destroyOnUnmount","SurveyNew","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","showFormReview","_this2","surveys_SurveyFormReview","setState","surveys_SurveyForm","App","components_Header","react_router","exact","path","combineReducers","action","window","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.91cf61e6.chunk.js","sourcesContent":["import axios from 'axios'\nimport { FETCH_USER } from './types'\n// action creators are functions that return actions\n\nexport const fetchUser = () => async (dispatch) => {\n       const res = await axios.get('/api/current_user');\n            \n       dispatch({ type: FETCH_USER, payload: res.data });\n};\n\nexport const submitSurvey = (values, history) => async (dispatch) => {\n    const res = await axios.post('/api/surveys', values);\n    \n    history.push('/surveys');\n    dispatch({ type: FETCH_USER, payload: res.data });\n};","export const FETCH_USER = 'fetch_user'\n","import React from \"react\"\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nclass Header extends React.Component {\n    renderContent() {\n      switch(this.props.auth){\n        case null:\n          return;\n        case false:\n          return (\n            <li><a href=\"/auth/google\">Login</a></li>\n          )\n        \n        default:\n          return (\n            <li><a href=\"/api/logout\">Logout</a></li>\n          )\n      }\n    }\n    render () {\n        return(\n        <nav>\n        <div className=\"nav-wrapper\">\n          <Link \n          to={this.props.auth ? \"/surveys\" : \"/\"} \n          className=\"brand-logo\"\n          >\n            LOGO\n          </Link>\n          <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n              {this.renderContent()}\n              <li><a href=\"badges.html\">Components</a></li>\n              <li><a href=\"collapsible.html\">JavaScript</a></li>\n          </ul>\n        </div>\n      </nav>\n        )\n    }\n}\n\nfunction mapStateToProps(state){\n  return { auth: state.auth }\n}\n\nexport default connect(mapStateToProps)(Header);","import React from \"react\"\nimport { connect } from 'react-redux'\n\nclass Landing extends React.Component {\n    render (){\n    return (\n        <div>\n        Collect feedback from your users\n        </div>\n    )\n}\n}\n\n\nexport default Landing","import React from \"react\";\nimport { Link } from 'react-router-dom';\n\nconst Dashboard = () => {\n    return (\n        <div>\n            <div className=\"fixed-action-btn\">\n            <Link to=\"/surveys/new\" className=\"btn-floating btn-large red\">\n                <i className=\"material-icons\">add</i>\n             </Link>\n            </div>\n        </div>\n    );\n};\n\nexport default Dashboard;","//SurveyFormReview shows users their form inputs for review\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport * as actions from '../../actions';\n\nconst SurveyFormReview = (props) => {\n    \n    return (\n        <div>\n            <h2>Please confirm yout entries before submitting</h2>\n            <div>\n                <label>Survey Title</label>\n                <div>{props.formValues.title}</div>\n                <label>Subject Line</label>\n                <div>{props.formValues.subject}</div>\n                <label>Email Body</label>\n                <div>{props.formValues.body}</div>\n                <label>Recipient List</label>\n                <div>{props.formValues.recipients}</div>\n            </div>\n\n            <button className=\"yellow darken-3 btn-flat white-text\"\n            onClick={props.onCancel}\n            >\n                Back\n            </button>\n            <button \n            onClick={() => props.submitSurvey(props.formValues, props.history)}\n            className=\"blue btn-flat right white-text\">\n                    Send survey\n                    <i className=\"material-icons right\">email</i>\n                </button>\n        </div>\n    );\n};\n\nfunction mapStateToProps(state) {\n    return { formValues: state.form.surveyForm.values };\n\n}\n\nexport default connect(mapStateToProps, actions)(withRouter(SurveyFormReview));","//SurveyField contains logic to render a single label and text input\n\nimport React from 'react';\n\nexport default (props) => {\n    console.log(props.meta);\n    return (\n        <div>\n            <label>{props.label}</label>\n            <input {...props.input} style={{ marginBottom: '5px'}} />\n            <div className=\"red-text\" style={{ marginBottom: '20px '}}>\n            {(props.meta.touched && props.meta.error)?\n                props.meta.error : undefined}\n            </div>\n        </div>\n    );\n};","const regEmail = \n/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nexport default function validateEmails (emails) {\n    const invalidEmails = emails.split(',')\n    .map(email => email.trim())\n    .filter(email => !regEmail.test(email));\n\n    if (invalidEmails.length)\n        return `These emails are invalid: ${invalidEmails}`;\n};","//SurveyForm shows a form for a user to add input\nimport React from \"react\";\nimport { reduxForm, Field } from 'redux-form';\nimport { Link } from 'react-router-dom'\nimport SurveyField from './SurveyField';\nimport validateEmails from '../../utils/validateEmails';\n\nclass SurveyForm extends React.Component {\n    render() {\n        return (\n            <div>\n                <form \n                onSubmit={this.props.handleSubmit(this.props.onSurveySubmit)}\n                >\n                    <div>\n                    <Field label=\"Survey Title\" type=\"text\" name=\"title\" component={SurveyField}/>\n                    <Field label=\"Subject Line\" type=\"text\" name=\"subject\" component={SurveyField}/>\n                    <Field label=\"Email Body\" type=\"text\" name=\"body\" component={SurveyField}/>\n                    <Field label=\"Recipient List\" type=\"text\" name=\"recipients\" component={SurveyField}/>\n                    </div>\n                    <Link to=\"/surveys\" className=\"red btn-flat white-\">\n                        Cancel\n                    </Link>\n                <button type=\"submit\" className=\"teal btn-flat right white-text\">\n                    Next\n                    <i className=\"material-icons right\">done</i>\n                </button>\n                </form>\n            </div>\n        );\n    };\n}\n\nfunction validate(values) {\n    const errors = {};\n\n    if(!values.title)\n        errors.title = 'You must provide a title';\n\n    if(!values.subject)\n        errors.subject = 'You must provide a subject';\n\n    if(!values.body)\n        errors.body = 'You must provide a body';\n    \n    //Emails should be separated by commas\n    if (values.recipients)\n    errors.recipients= validateEmails(values.recipients);\n\n    return errors;\n}\n\nexport default reduxForm({\n    validate: validate,\n    form: 'surveyForm',\n    destroyOnUnmount: false\n})(SurveyForm);","//SurveyNew shows SurveyForm and SurveyFormReview\nimport React from \"react\";\nimport { reduxForm } from 'redux-form';\nimport SurveyFormReview from './SurveyFormReview';\nimport SurveyForm from './SurveyForm';\n\nclass SurveyNew extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { showFormReview: false };\n    }\n\n    renderContent() {\n        if (this.state.showFormReview){\n            return <SurveyFormReview onCancel={() => this.setState({ showFormReview: false })} />;\n        }\n\n        return (<SurveyForm onSurveySubmit={() => this.setState({ showFormReview: true })} \n        />\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                {this.renderContent()}\n            </div>\n        );\n    };\n}\n\nexport default reduxForm({\n    form: 'surveyForm'\n}) (SurveyNew);","//React Router\n\nimport React from \"react\"\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport * as actions from '../actions'\n\n\n//BrowserRouter = brain of react router\n//Route: \n\nimport Header from './Header'\nimport Landing from \"./Landing\"\nimport Dashboard from './Dashboard'\nimport SurveyNew from './surveys/SurveyNew'\n\nclass App extends React.Component {\n    componentDidMount () {\n        this.props.fetchUser();\n    }\n    render(){\n    return (\n            <BrowserRouter>\n                <div className=\"container\">\n                    <Header/>\n                    <Route exact path=\"/surveys\" component={Dashboard} />\n                    <Route path=\"/surveys/new\" component={SurveyNew} />\n                    <Route exact path=\"/\" component={Landing} />\n                </div>\n            </BrowserRouter>\n    );\n}\n}\n\nexport default connect(null, actions)(App);","import { combineReducers } from 'redux';\nimport { reducer as reduxForm } from 'redux-form';\nimport authReducer from './authReducer';\n\n\nexport default combineReducers({\n    auth: authReducer,\n    form: reduxForm\n});","import { FETCH_USER } from '../actions/types'\n\nexport default function (state = null, action) {\n    switch (action.type) {\n        case FETCH_USER:\n            return action.payload || false;\n        default:\n            return state;\n    }\n}","//Redux\nimport 'materialize-css/dist/css/materialize.min.css'\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { Provider } from \"react-redux\"\nimport { createStore, applyMiddleware } from \"redux\"\nimport reduxThunk from 'redux-thunk'\n\nimport App from \"./components/App\"\nimport reducers from './reducers';\nimport axios from 'axios';\nwindow.axios = axios;\n\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n<Provider store={store}>\n    <App />\n</Provider>, \ndocument.getElementById(\"root\")\n);"],"sourceRoot":""}